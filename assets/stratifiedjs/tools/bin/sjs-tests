#!/usr/bin/env python
from __future__ import print_function

# All vars are optional:
# $NODEJS, $NPM, $SJS_ROOT
# $BROWSERS (e.g PhantomJS,Firefox - used for karma)
# $r -- runner: comma-separated list of karma,nodejs
# $t -- test suite:  unit|integration

import os,sys,subprocess,time
TRAVIS = os.environ.get('TRAVIS', 'false') == 'true'
browsers = os.environ.get('BROWSERS', 'PhantomJS').strip().split(',')
suite = os.environ.get('t', None)
args = sys.argv[1:]
if suite is not None:
  args.insert(0, suite)

sjs_root = os.environ.get('SJS_ROOT', None)
if sjs_root is not None:
	os.chdir(sjs_root)
else: sjs_root = os.getcwd()

default_runners = 'node,karma'

if TRAVIS:
	# use presence of BROWSERS to imply node/karma runner
	default_runners = 'karma' if 'BROWSERS' in os.environ else 'node'

runners = os.environ.get('r', default_runners).lower().split(',')

if TRAVIS and 'karma' in runners:
	if browsers != ['PhantomJS']:
		os.environ['DISPLAY'] = ':99'
		subprocess.check_call(["sh", "-e", "/etc/init.d/xvfb", "start"])
		time.sleep(3)

node = os.environ.get('NODEJS', 'node')
npm = os.environ.get('NPM', 'npm')

testmod = 'test/run.html'


conductance = None
if 'integration' in suite:
	null = open(os.devnull)
	# make sure npm-installed conductance can be found on $PATH
	os.environ['PATH'] = os.pathsep.join([
		os.environ['PATH'],
		os.path.abspath('node_modules/.bin')
	])
	if subprocess.Popen(['which', 'conductance'], stdout=null, stderr=subprocess.STDOUT).wait() != 0:
		subprocess.check_call([npm, 'install', '--production', 'conductance'])
	conductance = subprocess.Popen(['conductance', 'serve', 'test/config.mho'], stdout=null)
	time.sleep(1)
	assert conductance.poll() is None, "conductance process exited with status %s" % conductance.poll()

try:
	if TRAVIS:
		# fail if there are outstanding VCS changes
		subprocess.check_call([node, 'sjs', 'src/build/buildscript.sjs'])
		subprocess.check_call([node, 'sjs', 'tools/vcs-changes.sjs'])

	for runner in runners:
		if runner == 'node':
			subprocess.check_call([node, 'sjs', testmod] + args)
		elif runner == 'karma':
			if not os.path.exists('node_modules/karma-sjs-adapter'):
				subprocess.check_call([npm, 'install'])


			subprocess.check_call([
				'test/karma',
				'start',
				'tools/karma/conf.js',
				'--single-run',
				'--browsers=' + ','.join(browsers),
				'--', testmod] + args)
				
		else:
			raise AssertionError("Unknown runner: %s" % (runner,))

except subprocess.CalledProcessError as e:
	print(str(e), file=sys.stderr)
	sys.exit(1)
finally:
	if conductance is not None:
		conductance.terminate()
		conductance.wait()

