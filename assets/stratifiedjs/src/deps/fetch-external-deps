#!/usr/bin/env sjs
// vim: syntax=sjs

var path = require('path');
var fs      = require('sjs:nodejs/fs');
var childProcess    = require('sjs:nodejs/child-process');
var prompt    = require('sjs:debug').prompt;
var { merge } = require('sjs:object');
@ = require('sjs:sequence');

var run = function(cmd, args, opts) {
  console.log(" + #{cmd} #{args.join(' ')}");
  return childProcess.run(cmd, args, ({stdio:'inherit'} .. merge(opts)));
}

// make sure we're in the right directory
var here = path.dirname(process.argv[1]);
process.chdir(here);

var sources = getSources();
for (var i=0; i<sources.length; ++i) {
  var src = sources[i];
  var changes = run('git', ['status', '--porcelain', src.dir], {stdio: [0,'pipe', 2]}).stdout.split('\n')
    .. @filter(line -> line.length > 0)
    // .. @monitor(x -> console.log(JSON.stringify(x)))
    .. @map(line -> line[1]) // extract just the Y column of status (working copy state). It's OK if we have staged changes.
    .. @filter(st -> st != ' ')
    .. @toArray;
  if (changes.length !== 0) {
    console.log('directory '+src.dir+' not clean -> ignoring');
    continue;
  }
  if (fs.exists(src.dir+'.git')) {
    console.log('directory '+src.dir+' already contains a git repository -> ignoring');
    continue;
  }
  var fullpath = path.join(here, src.dir);
  console.log("Replacing directory #{fullpath} with github repository at #{src.repo}");
  if (prompt('Sure you want to proceed? [y/N] ').toLowerCase() != 'y') {
    console.log('Skipping '+fs.realpath(src.dir));
    continue;
  }
  run('rm', ['-rf', src.dir]);
  console.log('Cloning external repo');
  run('git', ['clone', src.repo, src.dir]);
  console.log('Checking out revision '+src.commit);
  run('git', ['checkout', src.commit], {cwd: src.dir});
  console.log('Reapplying our patches');
  run('git', ['checkout', '--', src.dir]);
}


// helpers:

function getSources() {
  var src = fs.readFile('sources.txt').toString().split("\n");
  var matches, rv = [];
  for (var i=0; i<src.length; ++i) {
    if ((matches = /^([^#][^ ]*)\s+([^ ]+)\s+([^ ]+)/.exec(src[i])))
      rv.push({dir: matches[1], repo: matches[2], commit: matches[3]});
  }
  return rv;
}
