{
  "type": "lib",
  "children": {
    "#language/": {
      "type": "lib",
      "children": {
        "builtins": {
          "type": "module",
          "children": {
            "Stratum": {
              "type": "class",
              "children": {
                "abort": {
                  "type": "function"
                },
                "value": {
                  "type": "function"
                },
                "waitforValue": {
                  "type": "function"
                },
                "waiting": {
                  "type": "function"
                }
              }
            },
            "exports": {
              "type": "variable"
            },
            "hold": {
              "type": "function"
            },
            "inline-modules": {
              "type": "syntax"
            },
            "module-system": {
              "type": "syntax"
            },
            "module.exports": {
              "type": "variable"
            },
            "module.getCanonicalId": {
              "type": "function"
            },
            "module.id": {
              "type": "variable"
            },
            "module.setCanonicalId": {
              "type": "function"
            },
            "require": {
              "type": "function"
            },
            "require.hubs": {
              "type": "variable"
            },
            "require.hubs.addDefault": {
              "type": "function"
            },
            "require.hubs.defined": {
              "type": "function"
            },
            "require.main": {
              "type": "variable"
            },
            "require.modules": {
              "type": "variable"
            },
            "require.resolve": {
              "type": "function"
            }
          },
          "summary": "Globally-available functions and objects"
        },
        "documentation": {
          "type": "module",
          "children": {
            "sjs-lib-index.txt": {
              "type": "feature"
            }
          },
          "summary": "StratifiedJS documentation directives"
        },
        "metadata": {
          "type": "module",
          "children": {
            "@require": {
              "type": "feature"
            }
          },
          "summary": "StratifiedJS metadata syntax"
        },
        "module-guidelines": {
          "type": "module",
          "children": {},
          "summary": "StratifiedJS module guidelines"
        },
        "syntax": {
          "type": "module",
          "children": {
            "?": {
              "type": "syntax"
            },
            "@altns": {
              "type": "syntax"
            },
            "__js": {
              "type": "syntax"
            },
            "arrow-function": {
              "type": "syntax"
            },
            "blocklambda": {
              "type": "syntax"
            },
            "calling-javascript": {
              "type": "syntax"
            },
            "collapse": {
              "type": "syntax"
            },
            "destructure": {
              "type": "syntax"
            },
            "double-dot": {
              "type": "syntax"
            },
            "quasi-quote": {
              "type": "syntax"
            },
            "spawn": {
              "type": "syntax"
            },
            "string-interpolation": {
              "type": "syntax"
            },
            "try-retract": {
              "type": "syntax"
            },
            "using": {
              "type": "syntax"
            },
            "waitfor-and": {
              "type": "syntax"
            },
            "waitfor-or": {
              "type": "syntax"
            },
            "waitfor-resume": {
              "type": "syntax"
            }
          },
          "summary": "StratifiedJS language syntax"
        }
      }
    },
    "array": {
      "type": "module",
      "children": {
        "cmp": {
          "type": "function"
        },
        "cycle": {
          "type": "function"
        },
        "difference": {
          "type": "function"
        },
        "flatten": {
          "type": "function"
        },
        "haveCommonElements": {
          "type": "function"
        },
        "isArrayLike": {
          "type": "function"
        },
        "remove": {
          "type": "function"
        },
        "union": {
          "type": "function"
        }
      },
      "summary": "Functions for working with arrays"
    },
    "assert": {
      "type": "module",
      "children": {
        "AssertionError": {
          "type": "class",
          "children": {
            "AssertionError": {
              "type": "ctor"
            }
          }
        },
        "atomic": {
          "type": "function"
        },
        "catchError": {
          "type": "function"
        },
        "contains": {
          "type": "function"
        },
        "eq": {
          "type": "function"
        },
        "equal": {
          "type": "function"
        },
        "fail": {
          "type": "function"
        },
        "falsy": {
          "type": "function"
        },
        "is": {
          "type": "function"
        },
        "isNot": {
          "type": "function"
        },
        "notContains": {
          "type": "function"
        },
        "notEq": {
          "type": "function"
        },
        "notEqual": {
          "type": "function"
        },
        "notOk": {
          "type": "function"
        },
        "notShallowEq": {
          "type": "function"
        },
        "notShallowEqual": {
          "type": "function"
        },
        "ok": {
          "type": "function"
        },
        "raises": {
          "type": "function"
        },
        "shallowEq": {
          "type": "function"
        },
        "shallowEqual": {
          "type": "function"
        },
        "suspends": {
          "type": "function"
        },
        "throwsError": {
          "type": "function"
        },
        "truthy": {
          "type": "function"
        }
      },
      "summary": "Assertion functions, primarily for use in tests."
    },
    "bundle": {
      "type": "module",
      "children": {
        "contents": {
          "type": "function"
        },
        "create": {
          "type": "function"
        },
        "findDependencies": {
          "type": "function"
        },
        "generateBundle": {
          "type": "function"
        }
      },
      "summary": "Create SJS code bundles"
    },
    "collection/": {
      "type": "lib",
      "children": {
        "btree": {
          "type": "module",
          "children": {
            "BTree": {
              "type": "class",
              "children": {}
            }
          },
          "summary": "Functions for creating and manipulating B-trees"
        },
        "dictionary": {
          "type": "module",
          "children": {
            "Dictionary": {
              "type": "class",
              "children": {}
            },
            "del": {
              "type": "function"
            },
            "get": {
              "type": "function"
            },
            "has": {
              "type": "function"
            },
            "insert": {
              "type": "function"
            },
            "modify": {
              "type": "function"
            },
            "remove": {
              "type": "function"
            },
            "set": {
              "type": "function"
            }
          },
          "summary": "Functions for manipulating dictionary data structures (JavaScript objects, hash tables, binary search trees, etc.)"
        },
        "list": {
          "type": "module",
          "children": {
            "List": {
              "type": "class",
              "children": {}
            },
            "indexOf": {
              "type": "function"
            },
            "insert": {
              "type": "function"
            },
            "length": {
              "type": "function"
            },
            "modify": {
              "type": "function"
            },
            "nth": {
              "type": "function"
            },
            "nth_has": {
              "type": "function"
            },
            "nth_set": {
              "type": "function"
            },
            "pop": {
              "type": "function"
            },
            "push": {
              "type": "function"
            },
            "remove": {
              "type": "function"
            },
            "sortedIndexFor": {
              "type": "function"
            },
            "sortedIndexOf": {
              "type": "function"
            },
            "sortedInsert": {
              "type": "function"
            },
            "sortedPush": {
              "type": "function"
            },
            "sortedRemove": {
              "type": "function"
            }
          },
          "summary": "Functions for manipulating finite ordered sequences"
        },
        "set": {
          "type": "module",
          "children": {
            "Set": {
              "type": "class",
              "children": {}
            },
            "add": {
              "type": "function"
            },
            "difference": {
              "type": "function"
            },
            "has": {
              "type": "function"
            },
            "remove": {
              "type": "function"
            },
            "union": {
              "type": "function"
            }
          },
          "summary": "Functions for manipulating data structures as a mathematical set"
        }
      },
      "summary": "SJS collection utilities"
    },
    "compare": {
      "type": "module",
      "children": {
        "describeEquals": {
          "type": "function"
        },
        "eq": {
          "type": "function"
        },
        "equals": {
          "type": "function"
        },
        "shallowEq": {
          "type": "function"
        },
        "shallowEquals": {
          "type": "function"
        }
      },
      "summary": "Deep or shallow object equality comparisons"
    },
    "compile/": {
      "type": "lib",
      "children": {
        "doc": {
          "type": "module",
          "children": {},
          "summary": "Utility for generating documentation indexes"
        },
        "minify": {
          "type": "module",
          "children": {
            "compile": {
              "type": "function"
            }
          },
          "summary": "SJS source code minifier"
        },
        "sjs": {
          "type": "module",
          "children": {
            "compile": {
              "type": "function"
            }
          },
          "summary": "SJS Compiler"
        },
        "stringify": {
          "type": "module",
          "children": {
            "compile": {
              "type": "function"
            }
          },
          "summary": "SJS source code stringifier"
        }
      },
      "summary": "SJS compilation utilities"
    },
    "cutil": {
      "type": "module",
      "children": {
        "Condition": {
          "type": "class",
          "children": {
            "Condition": {
              "type": "ctor"
            },
            "clear": {
              "type": "function"
            },
            "isSet": {
              "type": "variable"
            },
            "set": {
              "type": "function"
            },
            "value": {
              "type": "variable"
            },
            "wait": {
              "type": "function"
            }
          }
        },
        "Queue": {
          "type": "class",
          "children": {
            "Queue": {
              "type": "ctor"
            },
            "count": {
              "type": "function"
            },
            "get": {
              "type": "function"
            },
            "isFull": {
              "type": "function"
            },
            "peek": {
              "type": "function"
            },
            "put": {
              "type": "function"
            }
          }
        },
        "Semaphore": {
          "type": "class",
          "children": {
            "Semaphore": {
              "type": "ctor"
            },
            "acquire": {
              "type": "function"
            },
            "forceAcquire": {
              "type": "function"
            },
            "permits": {
              "type": "variable"
            },
            "release": {
              "type": "function"
            },
            "synchronize": {
              "type": "function"
            }
          }
        },
        "StratumAborted": {
          "type": "class",
          "children": {}
        },
        "breaking": {
          "type": "function"
        },
        "waitforAll": {
          "type": "function"
        },
        "waitforFirst": {
          "type": "function"
        }
      },
      "summary": "Functions and constructs for concurrent stratified programming"
    },
    "dashdash": {
      "type": "module",
      "children": {
        "Parser": {
          "type": "class",
          "children": {
            "help": {
              "type": "function"
            },
            "parse": {
              "type": "function"
            }
          }
        },
        "createParser": {
          "type": "function"
        },
        "parse": {
          "type": "function"
        }
      },
      "summary": "Options parser (tracking the [node-dashdash library](https://github.com/trentm/node-dashdash))"
    },
    "debug": {
      "type": "module",
      "children": {
        "inspect": {
          "type": "function"
        },
        "prompt": {
          "type": "function"
        }
      },
      "summary": "Helpers for debugging"
    },
    "event": {
      "type": "module",
      "children": {
        "Emitter": {
          "type": "class",
          "children": {
            "Emitter": {
              "type": "ctor"
            },
            "emit": {
              "type": "function"
            }
          }
        },
        "EventStream": {
          "type": "class",
          "children": {}
        },
        "events": {
          "type": "function"
        },
        "wait": {
          "type": "function"
        }
      },
      "summary": "Event emitter and utilities for dealing with events."
    },
    "function": {
      "type": "module",
      "children": {
        "ITF_SIGNAL": {
          "type": "variable"
        },
        "bound": {
          "type": "function"
        },
        "chain": {
          "type": "function"
        },
        "deferred": {
          "type": "function"
        },
        "exclusive": {
          "type": "function"
        },
        "identity": {
          "type": "function"
        },
        "memoize": {
          "type": "function"
        },
        "nop": {
          "type": "function"
        },
        "par": {
          "type": "function"
        },
        "rateLimit": {
          "type": "function"
        },
        "seq": {
          "type": "function"
        },
        "sequential": {
          "type": "function"
        },
        "signal": {
          "type": "function"
        },
        "trycatch": {
          "type": "function"
        },
        "tryfinally": {
          "type": "function"
        },
        "unbatched": {
          "type": "function"
        }
      },
      "summary": "Function composition helpers"
    },
    "http": {
      "type": "module",
      "children": {
        "get": {
          "type": "function"
        },
        "getXDomainCaps": {
          "type": "function"
        },
        "json": {
          "type": "function"
        },
        "jsonp": {
          "type": "function"
        },
        "post": {
          "type": "function"
        },
        "request": {
          "type": "function"
        }
      },
      "summary": "Functions for performing HTTP requests and working with URLs"
    },
    "jsondiffpatch": {
      "type": "module",
      "children": {
        "diff": {
          "type": "function"
        },
        "patch": {
          "type": "function"
        },
        "reverse": {
          "type": "function"
        },
        "unpatch": {
          "type": "function"
        }
      },
      "summary": "Diff & patch for JSON objects"
    },
    "logging": {
      "type": "module",
      "children": {
        "DEBUG": {
          "type": "variable"
        },
        "ERROR": {
          "type": "variable"
        },
        "INFO": {
          "type": "variable"
        },
        "OFF": {
          "type": "variable"
        },
        "VERBOSE": {
          "type": "variable"
        },
        "WARN": {
          "type": "variable"
        },
        "debug": {
          "type": "function"
        },
        "error": {
          "type": "function"
        },
        "getConsole": {
          "type": "function"
        },
        "getLevel": {
          "type": "function"
        },
        "info": {
          "type": "function"
        },
        "isEnabled": {
          "type": "function"
        },
        "logContext": {
          "type": "function"
        },
        "print": {
          "type": "function"
        },
        "setConsole": {
          "type": "function"
        },
        "setFormatter": {
          "type": "function"
        },
        "setLevel": {
          "type": "function"
        },
        "verbose": {
          "type": "function"
        },
        "warn": {
          "type": "function"
        }
      },
      "summary": "Simple cross-environment logging framework"
    },
    "lru-cache": {
      "type": "module",
      "children": {
        "Cache": {
          "type": "class",
          "children": {
            "clear": {
              "type": "function"
            },
            "discard": {
              "type": "function"
            },
            "get": {
              "type": "function"
            },
            "init": {
              "type": "function"
            },
            "put": {
              "type": "function"
            }
          }
        },
        "makeCache": {
          "type": "function"
        }
      },
      "summary": "Least Recently Used Cache"
    },
    "marked": {
      "type": "module",
      "children": {
        "convert": {
          "type": "function"
        }
      },
      "summary": "Markdown to Html Converter (tracking the [marked library](https://github.com/chjj/marked))"
    },
    "nodejs/": {
      "type": "lib",
      "children": {
        "child-process": {
          "type": "module",
          "children": {
            "exec": {
              "type": "function"
            },
            "isRunning": {
              "type": "function"
            },
            "kill": {
              "type": "function"
            },
            "launch": {
              "type": "function"
            },
            "run": {
              "type": "function"
            },
            "wait": {
              "type": "function"
            }
          },
          "summary": "Stratified wrapper of [nodejs's child_process lib](http://nodejs.org/api/child_process.html)"
        },
        "fs": {
          "type": "module",
          "children": {
            "chmod": {
              "type": "function"
            },
            "close": {
              "type": "function"
            },
            "createReadStream": {
              "type": "function"
            },
            "createWriteStream": {
              "type": "function"
            },
            "exists": {
              "type": "function"
            },
            "fileContents": {
              "type": "function"
            },
            "fstat": {
              "type": "function"
            },
            "futimes": {
              "type": "function"
            },
            "isDirectory": {
              "type": "function"
            },
            "isFile": {
              "type": "function"
            },
            "link": {
              "type": "function"
            },
            "lstat": {
              "type": "function"
            },
            "mkdir": {
              "type": "function"
            },
            "open": {
              "type": "function"
            },
            "read": {
              "type": "function"
            },
            "readFile": {
              "type": "function"
            },
            "readdir": {
              "type": "function"
            },
            "readlink": {
              "type": "function"
            },
            "realpath": {
              "type": "function"
            },
            "rename": {
              "type": "function"
            },
            "rmdir": {
              "type": "function"
            },
            "stat": {
              "type": "function"
            },
            "symlink": {
              "type": "function"
            },
            "truncate": {
              "type": "function"
            },
            "unlink": {
              "type": "function"
            },
            "utimes": {
              "type": "function"
            },
            "waitforChange": {
              "type": "function"
            },
            "withReadStream": {
              "type": "function"
            },
            "withWriteStream": {
              "type": "function"
            },
            "write": {
              "type": "function"
            },
            "writeFile": {
              "type": "function"
            }
          },
          "summary": "Stratified wrapper of [nodejs filesystem lib](http://nodejs.org/api/fs.html)"
        },
        "http": {
          "type": "module",
          "children": {
            "Server": {
              "type": "class",
              "children": {
                "address": {
                  "type": "variable"
                },
                "close": {
                  "type": "function"
                },
                "eachRequest": {
                  "type": "function"
                },
                "nodeServer": {
                  "type": "variable"
                }
              }
            },
            "ServerRequest": {
              "type": "class",
              "children": {
                "body": {
                  "type": "variable"
                },
                "request": {
                  "type": "variable"
                },
                "response": {
                  "type": "variable"
                },
                "url": {
                  "type": "variable"
                }
              }
            },
            "withServer": {
              "type": "function"
            }
          },
          "summary": "HTTP server functionality"
        },
        "mkdirp": {
          "type": "module",
          "children": {
            "mkdirp": {
              "type": "function"
            }
          },
          "summary": "Recursively make directories (tracking the [mkdirp library](https://github.com/substack/node-mkdirp))"
        },
        "repl": {
          "type": "module",
          "children": {
            "runREPL": {
              "type": "function"
            }
          },
          "summary": "Stratified read-eval-print loop"
        },
        "rimraf": {
          "type": "module",
          "children": {
            "rimraf": {
              "type": "function"
            }
          },
          "summary": "`rm -rf` for node (tracking the [rimraf library](https://github.com/isaacs/rimraf))"
        },
        "stream": {
          "type": "module",
          "children": {
            "DelimitedReader": {
              "type": "class",
              "children": {
                "DelimitedReader": {
                  "type": "ctor"
                },
                "read": {
                  "type": "function"
                },
                "readUntil": {
                  "type": "function"
                }
              }
            },
            "ReadableStream": {
              "type": "class",
              "children": {
                "ReadableStream": {
                  "type": "ctor"
                }
              }
            },
            "ReadableStringStream": {
              "type": "class",
              "children": {}
            },
            "WritableStream": {
              "type": "class",
              "children": {
                "WritableStream": {
                  "type": "ctor"
                },
                "contents": {
                  "type": "function"
                }
              }
            },
            "WritableStringStream": {
              "type": "class",
              "children": {
                "WritableStringStream": {
                  "type": "ctor"
                },
                "data": {
                  "type": "variable"
                }
              }
            },
            "contents": {
              "type": "function"
            },
            "end": {
              "type": "function"
            },
            "lines": {
              "type": "function"
            },
            "pump": {
              "type": "function"
            },
            "read": {
              "type": "function"
            },
            "readAll": {
              "type": "function"
            },
            "write": {
              "type": "function"
            }
          },
          "summary": "Stratified helpers for dealing with [nodejs's async streams](http://nodejs.org/api/stream.html)"
        },
        "tar": {
          "type": "module",
          "children": {
            "extract": {
              "type": "function"
            },
            "gunzip": {
              "type": "function"
            },
            "gzip": {
              "type": "function"
            },
            "pack": {
              "type": "function"
            }
          },
          "summary": "Create & extract tar archives"
        },
        "tempfile": {
          "type": "module",
          "children": {
            "File": {
              "type": "class",
              "children": {
                "close": {
                  "type": "function"
                },
                "file": {
                  "type": "variable"
                },
                "path": {
                  "type": "variable"
                },
                "readStream": {
                  "type": "function"
                },
                "writeStream": {
                  "type": "function"
                }
              }
            },
            "TemporaryDir": {
              "type": "function"
            },
            "TemporaryFile": {
              "type": "function"
            }
          },
          "summary": "Temporary file / directory creation"
        },
        "terminal": {
          "type": "module",
          "children": {},
          "summary": "node-terminal from https://github.com/mattijs/node-terminal"
        }
      },
      "summary": "Collection of [nodejs](http://nodejs.org)-related modules."
    },
    "numeric": {
      "type": "module",
      "children": {
        "Dopri": {
          "type": "class",
          "children": {
            "at": {
              "type": "function"
            },
            "x": {
              "type": "variable"
            },
            "y": {
              "type": "variable"
            }
          }
        },
        "Spline": {
          "type": "class",
          "children": {
            "at": {
              "type": "function"
            },
            "diff": {
              "type": "function"
            },
            "roots": {
              "type": "function"
            }
          }
        },
        "T": {
          "type": "class",
          "children": {
            "NUMERICFUN": {
              "type": "function"
            },
            "conj": {
              "type": "function"
            },
            "fft": {
              "type": "function"
            },
            "get": {
              "type": "function"
            },
            "getRow": {
              "type": "function"
            },
            "getRows": {
              "type": "function"
            },
            "ifft": {
              "type": "function"
            },
            "reciprocal": {
              "type": "function"
            },
            "set": {
              "type": "function"
            },
            "setRow": {
              "type": "function"
            },
            "setRows": {
              "type": "function"
            },
            "transjugate": {
              "type": "function"
            }
          }
        },
        "abs": {
          "type": "function"
        },
        "acos": {
          "type": "function"
        },
        "add": {
          "type": "function"
        },
        "addeq": {
          "type": "function"
        },
        "all": {
          "type": "function"
        },
        "and": {
          "type": "function"
        },
        "andeq": {
          "type": "function"
        },
        "any": {
          "type": "function"
        },
        "asin": {
          "type": "function"
        },
        "atan": {
          "type": "function"
        },
        "atan2": {
          "type": "function"
        },
        "band": {
          "type": "function"
        },
        "bench": {
          "type": "function"
        },
        "bnot": {
          "type": "function"
        },
        "bor": {
          "type": "function"
        },
        "bxor": {
          "type": "function"
        },
        "cLU": {
          "type": "function"
        },
        "cLUsolve": {
          "type": "function"
        },
        "cdelsq": {
          "type": "function"
        },
        "cdotMV": {
          "type": "function"
        },
        "ceil": {
          "type": "function"
        },
        "cgrid": {
          "type": "function"
        },
        "clone": {
          "type": "function"
        },
        "cos": {
          "type": "function"
        },
        "det": {
          "type": "function"
        },
        "diag": {
          "type": "function"
        },
        "dim": {
          "type": "function"
        },
        "div": {
          "type": "function"
        },
        "diveq": {
          "type": "function"
        },
        "dopri": {
          "type": "function"
        },
        "dot": {
          "type": "function"
        },
        "eig": {
          "type": "function"
        },
        "epsilon": {
          "type": "variable"
        },
        "eq": {
          "type": "function"
        },
        "exp": {
          "type": "function"
        },
        "floor": {
          "type": "function"
        },
        "geq": {
          "type": "function"
        },
        "getBlock": {
          "type": "function"
        },
        "getDiag": {
          "type": "function"
        },
        "gt": {
          "type": "function"
        },
        "identity": {
          "type": "function"
        },
        "imageURL": {
          "type": "function"
        },
        "inv": {
          "type": "function"
        },
        "isFinite": {
          "type": "function"
        },
        "isNaN": {
          "type": "function"
        },
        "largeArray": {
          "type": "variable"
        },
        "leq": {
          "type": "function"
        },
        "linspace": {
          "type": "function"
        },
        "log": {
          "type": "function"
        },
        "lshift": {
          "type": "function"
        },
        "lshifteq": {
          "type": "function"
        },
        "lt": {
          "type": "function"
        },
        "mapreduce": {
          "type": "function"
        },
        "mod": {
          "type": "function"
        },
        "modeq": {
          "type": "function"
        },
        "mul": {
          "type": "function"
        },
        "neg": {
          "type": "function"
        },
        "neq": {
          "type": "function"
        },
        "norm2": {
          "type": "function"
        },
        "norm2Squared": {
          "type": "function"
        },
        "norminf": {
          "type": "function"
        },
        "not": {
          "type": "function"
        },
        "or": {
          "type": "function"
        },
        "oreq": {
          "type": "function"
        },
        "parseCSV": {
          "type": "function"
        },
        "parseDate": {
          "type": "function"
        },
        "parseFloat": {
          "type": "function"
        },
        "pointwise": {
          "type": "function"
        },
        "pow": {
          "type": "function"
        },
        "precision": {
          "type": "variable"
        },
        "prettyPrint": {
          "type": "function"
        },
        "random": {
          "type": "function"
        },
        "rep": {
          "type": "function"
        },
        "round": {
          "type": "function"
        },
        "rrshift": {
          "type": "function"
        },
        "rrshifteq": {
          "type": "function"
        },
        "rshift": {
          "type": "function"
        },
        "rshifteq": {
          "type": "function"
        },
        "sLUP": {
          "type": "function"
        },
        "sLUPsolve": {
          "type": "function"
        },
        "same": {
          "type": "function"
        },
        "sclone": {
          "type": "function"
        },
        "sdiag": {
          "type": "function"
        },
        "sdim": {
          "type": "function"
        },
        "sdot": {
          "type": "function"
        },
        "seedrandom.random": {
          "type": "function"
        },
        "seedrandom.seedrandom": {
          "type": "function"
        },
        "setBlock": {
          "type": "function"
        },
        "sgather": {
          "type": "function"
        },
        "sidentity": {
          "type": "function"
        },
        "sin": {
          "type": "function"
        },
        "solveQP": {
          "type": "function"
        },
        "spline": {
          "type": "function"
        },
        "sqrt": {
          "type": "function"
        },
        "sscatter": {
          "type": "function"
        },
        "stranspose": {
          "type": "function"
        },
        "sub": {
          "type": "function"
        },
        "subeq": {
          "type": "function"
        },
        "sum": {
          "type": "function"
        },
        "svd": {
          "type": "function"
        },
        "t": {
          "type": "function"
        },
        "tan": {
          "type": "function"
        },
        "tensor": {
          "type": "function"
        },
        "toCSV": {
          "type": "function"
        },
        "transpose": {
          "type": "function"
        },
        "uncmin": {
          "type": "function"
        },
        "version": {
          "type": "variable"
        },
        "xoreq": {
          "type": "function"
        }
      },
      "summary": "Functions for numeric linear algebra computations from [numericjs.com](http://numericjs.com)"
    },
    "object": {
      "type": "module",
      "children": {
        "Constructor": {
          "type": "function"
        },
        "clone": {
          "type": "function"
        },
        "construct": {
          "type": "function"
        },
        "extend": {
          "type": "function"
        },
        "get": {
          "type": "function"
        },
        "getOwn": {
          "type": "function"
        },
        "getPath": {
          "type": "function"
        },
        "has": {
          "type": "function"
        },
        "hasOwn": {
          "type": "function"
        },
        "keys": {
          "type": "function"
        },
        "merge": {
          "type": "function"
        },
        "override": {
          "type": "function"
        },
        "ownKeys": {
          "type": "function"
        },
        "ownPropertyPairs": {
          "type": "function"
        },
        "ownValues": {
          "type": "function"
        },
        "pairsToObject": {
          "type": "function"
        },
        "propertyPairs": {
          "type": "function"
        },
        "setPath": {
          "type": "function"
        },
        "tap": {
          "type": "function"
        },
        "values": {
          "type": "function"
        }
      },
      "summary": "Functions for working with objects"
    },
    "observable": {
      "type": "module",
      "children": {
        "ConflictError": {
          "type": "class",
          "children": {}
        },
        "Observable": {
          "type": "class",
          "children": {}
        },
        "ObservableVar": {
          "type": "class",
          "children": {
            "ObservableVar": {
              "type": "ctor"
            },
            "get": {
              "type": "function"
            },
            "modify": {
              "type": "function"
            },
            "set": {
              "type": "function"
            }
          }
        },
        "changes": {
          "type": "function"
        },
        "current": {
          "type": "function"
        },
        "isConflictError": {
          "type": "function"
        },
        "isObservableVar": {
          "type": "function"
        },
        "observe": {
          "type": "function"
        }
      },
      "summary": "Constructs for manipulating streams backed by time-varying values"
    },
    "quasi": {
      "type": "module",
      "children": {
        "Quasi": {
          "type": "class",
          "children": {
            "Quasi": {
              "type": "ctor"
            }
          }
        },
        "isQuasi": {
          "type": "function"
        },
        "joinQuasis": {
          "type": "function"
        },
        "mapQuasi": {
          "type": "function"
        },
        "toQuasi": {
          "type": "function"
        }
      },
      "summary": "Functions for working with quasis"
    },
    "regexp": {
      "type": "module",
      "children": {
        "escape": {
          "type": "function"
        },
        "isRegExp": {
          "type": "function"
        },
        "matches": {
          "type": "function"
        }
      },
      "summary": "Functions for working with regular expressions"
    },
    "sequence": {
      "type": "module",
      "children": {
        "Sequence": {
          "type": "class",
          "children": {}
        },
        "SequenceExhausted": {
          "type": "class",
          "children": {}
        },
        "Stream": {
          "type": "class",
          "children": {
            "Stream": {
              "type": "ctor"
            }
          }
        },
        "all": {
          "type": "function"
        },
        "all.par": {
          "type": "function"
        },
        "any": {
          "type": "function"
        },
        "any.par": {
          "type": "function"
        },
        "at": {
          "type": "function"
        },
        "buffer": {
          "type": "function"
        },
        "combine": {
          "type": "function"
        },
        "concat": {
          "type": "function"
        },
        "consume": {
          "type": "function"
        },
        "count": {
          "type": "function"
        },
        "dedupe": {
          "type": "function"
        },
        "each": {
          "type": "function"
        },
        "each.par": {
          "type": "function"
        },
        "each.track": {
          "type": "function"
        },
        "fib": {
          "type": "function"
        },
        "filter": {
          "type": "function"
        },
        "filter.par": {
          "type": "function"
        },
        "find": {
          "type": "function"
        },
        "find.par": {
          "type": "function"
        },
        "first": {
          "type": "function"
        },
        "generate": {
          "type": "function"
        },
        "groupBy": {
          "type": "function"
        },
        "hasElem": {
          "type": "function"
        },
        "indexed": {
          "type": "function"
        },
        "integers": {
          "type": "function"
        },
        "intersperse": {
          "type": "function"
        },
        "isSequence": {
          "type": "function"
        },
        "isStream": {
          "type": "function"
        },
        "join": {
          "type": "function"
        },
        "last": {
          "type": "function"
        },
        "map": {
          "type": "function"
        },
        "map.par": {
          "type": "function"
        },
        "mirror": {
          "type": "function"
        },
        "monitor": {
          "type": "function"
        },
        "pack": {
          "type": "function"
        },
        "partition": {
          "type": "function"
        },
        "reduce": {
          "type": "function"
        },
        "reduce1": {
          "type": "function"
        },
        "reverse": {
          "type": "function"
        },
        "skip": {
          "type": "function"
        },
        "skipWhile": {
          "type": "function"
        },
        "slice": {
          "type": "function"
        },
        "sort": {
          "type": "function"
        },
        "sortBy": {
          "type": "function"
        },
        "tailbuffer": {
          "type": "function"
        },
        "take": {
          "type": "function"
        },
        "takeWhile": {
          "type": "function"
        },
        "toArray": {
          "type": "function"
        },
        "toStream": {
          "type": "function"
        },
        "transform": {
          "type": "function"
        },
        "transform.par": {
          "type": "function"
        },
        "transform.par.unordered": {
          "type": "function"
        },
        "unique": {
          "type": "function"
        },
        "uniqueBy": {
          "type": "function"
        },
        "unpack": {
          "type": "function"
        },
        "zip": {
          "type": "function"
        },
        "zipLongest": {
          "type": "function"
        }
      },
      "summary": "Constructs for manipulating sequence structures (arrays, strings and more general streams)"
    },
    "service": {
      "type": "module",
      "children": {
        "Registry": {
          "type": "class",
          "children": {
            "Registry": {
              "type": "ctor"
            },
            "clearCached": {
              "type": "function"
            },
            "factory": {
              "type": "function"
            },
            "get": {
              "type": "function"
            },
            "has": {
              "type": "function"
            },
            "lazy": {
              "type": "function"
            },
            "set": {
              "type": "function"
            },
            "value": {
              "type": "function"
            }
          }
        }
      },
      "summary": "Structures for simple dependency injection"
    },
    "shell-quote": {
      "type": "module",
      "children": {
        "parse": {
          "type": "function"
        },
        "quote": {
          "type": "function"
        }
      },
      "summary": "Quote and parse shell commands"
    },
    "sjcl": {
      "type": "module",
      "children": {
        "bitArray": {
          "type": "class",
          "children": {
            "bitLength": {
              "type": "function"
            },
            "bitSlice": {
              "type": "function"
            },
            "clamp": {
              "type": "function"
            },
            "concat": {
              "type": "function"
            },
            "equal": {
              "type": "function"
            }
          }
        },
        "cipher.aes": {
          "type": "class",
          "children": {
            "cipher.aes": {
              "type": "ctor"
            },
            "decrypt": {
              "type": "function"
            },
            "encrypt": {
              "type": "function"
            }
          }
        },
        "codec.base64.fromBits": {
          "type": "function"
        },
        "codec.base64.toBits": {
          "type": "function"
        },
        "codec.hex.fromBits": {
          "type": "function"
        },
        "codec.hex.toBits": {
          "type": "function"
        },
        "codec.utf8String.fromBits": {
          "type": "function"
        },
        "codec.utf8String.toBits": {
          "type": "function"
        },
        "decrypt": {
          "type": "function"
        },
        "encrypt": {
          "type": "function"
        },
        "hash.sha256": {
          "type": "class",
          "children": {
            "blockSize": {
              "type": "variable"
            },
            "finalize": {
              "type": "function"
            },
            "hash": {
              "type": "function"
            },
            "hash.sha256": {
              "type": "ctor"
            },
            "reset": {
              "type": "function"
            },
            "update": {
              "type": "function"
            }
          }
        },
        "json.decode": {
          "type": "function"
        },
        "json.decrypt": {
          "type": "function"
        },
        "json.defaults": {
          "type": "variable"
        },
        "json.encode": {
          "type": "function"
        },
        "json.encrypt": {
          "type": "function"
        },
        "misc.cachedPbkdf2": {
          "type": "function"
        },
        "misc.hmac": {
          "type": "class",
          "children": {
            "encrypt": {
              "type": "function"
            },
            "mac": {
              "type": "function"
            },
            "misc.hmac": {
              "type": "ctor"
            }
          }
        },
        "misc.pbkdf2": {
          "type": "function"
        },
        "mode.ccm.decrypt": {
          "type": "function"
        },
        "mode.ccm.encrypt": {
          "type": "function"
        },
        "mode.ocb2.decrypt": {
          "type": "function"
        },
        "mode.ocb2.encrypt": {
          "type": "function"
        },
        "random.addEntropy": {
          "type": "function"
        },
        "random.addEventListener": {
          "type": "function"
        },
        "random.getProgress": {
          "type": "function"
        },
        "random.isReady": {
          "type": "function"
        },
        "random.randomWords": {
          "type": "function"
        },
        "random.removeEventListener": {
          "type": "function"
        },
        "random.startCollectors": {
          "type": "function"
        },
        "random.stopCollectors": {
          "type": "function"
        }
      },
      "summary": "Stanford JavaScript Crypto Library from http://crypto.stanford.edu/sjcl/"
    },
    "std": {
      "type": "module",
      "children": {},
      "summary": "Common functionality for SJS modules"
    },
    "string": {
      "type": "module",
      "children": {
        "arrayBufferToOctets": {
          "type": "function"
        },
        "base64ToArrayBuffer": {
          "type": "function"
        },
        "base64ToOctets": {
          "type": "function"
        },
        "capitalize": {
          "type": "function"
        },
        "contains": {
          "type": "function"
        },
        "endsWith": {
          "type": "function"
        },
        "isString": {
          "type": "function"
        },
        "lstrip": {
          "type": "function"
        },
        "octetsToArrayBuffer": {
          "type": "function"
        },
        "octetsToBase64": {
          "type": "function"
        },
        "padBoth": {
          "type": "function"
        },
        "padLeft": {
          "type": "function"
        },
        "padRight": {
          "type": "function"
        },
        "repeat": {
          "type": "function"
        },
        "rsplit": {
          "type": "function"
        },
        "rstrip": {
          "type": "function"
        },
        "sanitize": {
          "type": "function"
        },
        "split": {
          "type": "function"
        },
        "startsWith": {
          "type": "function"
        },
        "strip": {
          "type": "function"
        },
        "supplant": {
          "type": "function"
        },
        "unindent": {
          "type": "function"
        },
        "utf16ToUtf8": {
          "type": "function"
        },
        "utf8ToUtf16": {
          "type": "function"
        }
      },
      "summary": "Functions for working with strings"
    },
    "sys": {
      "type": "module",
      "children": {
        "argv": {
          "type": "function"
        },
        "eval": {
          "type": "function"
        },
        "executable": {
          "type": "variable"
        },
        "getGlobal": {
          "type": "function"
        },
        "hostenv": {
          "type": "variable"
        },
        "version": {
          "type": "variable"
        }
      },
      "summary": "SJS runtime utilities"
    },
    "test/": {
      "type": "lib",
      "children": {
        "reporter": {
          "type": "module",
          "children": {},
          "summary": "Reporter objects for outputting test suite results"
        },
        "runner": {
          "type": "module",
          "children": {
            "Results": {
              "type": "class",
              "children": {
                "Results": {
                  "type": "ctor"
                },
                "count": {
                  "type": "function"
                },
                "duration": {
                  "type": "variable"
                },
                "durationSeconds": {
                  "type": "function"
                },
                "failed": {
                  "type": "variable"
                },
                "ok": {
                  "type": "function"
                },
                "passed": {
                  "type": "variable"
                },
                "skipped": {
                  "type": "variable"
                },
                "total": {
                  "type": "variable"
                }
              }
            },
            "Runner": {
              "type": "class",
              "children": {
                "Runner": {
                  "type": "ctor"
                },
                "context": {
                  "type": "function"
                },
                "loadAll": {
                  "type": "function"
                },
                "run": {
                  "type": "function"
                }
              }
            },
            "TestResult": {
              "type": "class",
              "children": {
                "TestResult": {
                  "type": "ctor"
                },
                "description": {
                  "type": "variable"
                },
                "failed": {
                  "type": "variable"
                },
                "ok": {
                  "type": "variable"
                },
                "passed": {
                  "type": "variable"
                },
                "reason": {
                  "type": "variable"
                },
                "skipped": {
                  "type": "variable"
                },
                "test": {
                  "type": "variable"
                }
              }
            },
            "getRunOpts": {
              "type": "function"
            },
            "run": {
              "type": "function"
            }
          },
          "summary": "Test suite runner"
        },
        "std": {
          "type": "module",
          "children": {},
          "summary": "Standard test utilities"
        },
        "suite": {
          "type": "module",
          "children": {
            "Context": {
              "type": "class",
              "children": {
                "browserOnly": {
                  "type": "function"
                },
                "ignoreLeaks": {
                  "type": "function"
                },
                "posixOnly": {
                  "type": "function"
                },
                "serverOnly": {
                  "type": "function"
                },
                "skip": {
                  "type": "function"
                },
                "skipIf": {
                  "type": "function"
                },
                "timeout": {
                  "type": "function"
                },
                "windowsOnly": {
                  "type": "function"
                }
              }
            },
            "Test": {
              "type": "class",
              "children": {
                "browserOnly": {
                  "type": "function"
                },
                "ignoreLeaks": {
                  "type": "function"
                },
                "posixOnly": {
                  "type": "function"
                },
                "serverOnly": {
                  "type": "function"
                },
                "skip": {
                  "type": "function"
                },
                "skipIf": {
                  "type": "function"
                },
                "timeout": {
                  "type": "function"
                },
                "windowsOnly": {
                  "type": "function"
                }
              }
            },
            "assert": {
              "type": "variable"
            },
            "context": {
              "type": "function"
            },
            "isBrowser": {
              "type": "variable"
            },
            "isWindows": {
              "type": "variable"
            },
            "test": {
              "type": "function"
            },
            "test.afterAll": {
              "type": "function"
            },
            "test.afterEach": {
              "type": "function"
            },
            "test.beforeAll": {
              "type": "function"
            },
            "test.beforeEach": {
              "type": "function"
            }
          },
          "summary": "Functions for defining test suites"
        }
      },
      "summary": "Automated testing utilities"
    },
    "type": {
      "type": "module",
      "children": {
        "Interface": {
          "type": "class",
          "children": {
            "Interface": {
              "type": "ctor"
            }
          }
        },
        "is": {
          "type": "function"
        },
        "isArray": {
          "type": "function"
        },
        "isBoolean": {
          "type": "function"
        },
        "isCallable": {
          "type": "function"
        },
        "isNaN": {
          "type": "function"
        },
        "isNumber": {
          "type": "function"
        },
        "isObject": {
          "type": "function"
        },
        "isString": {
          "type": "function"
        }
      },
      "summary": "Functions for creating and inspecting types."
    },
    "url": {
      "type": "module",
      "children": {
        "build": {
          "type": "function"
        },
        "buildQuery": {
          "type": "function"
        },
        "coerceToURL": {
          "type": "function"
        },
        "decode": {
          "type": "function"
        },
        "encode": {
          "type": "function"
        },
        "fileURL": {
          "type": "function"
        },
        "isSameOrigin": {
          "type": "function"
        },
        "normalize": {
          "type": "function"
        },
        "parse": {
          "type": "function"
        },
        "toPath": {
          "type": "function"
        }
      },
      "summary": "Functions for manipulating URLs"
    },
    "xbrowser/": {
      "type": "lib",
      "children": {
        "console": {
          "type": "module",
          "children": {
            "Console": {
              "type": "class",
              "children": {
                "__finally__": {
                  "type": "function"
                },
                "clear": {
                  "type": "function"
                },
                "error": {
                  "type": "function"
                },
                "exec": {
                  "type": "function"
                },
                "expand": {
                  "type": "function"
                },
                "focus": {
                  "type": "function"
                },
                "log": {
                  "type": "function"
                },
                "shut": {
                  "type": "function"
                },
                "shutdown": {
                  "type": "function"
                },
                "warn": {
                  "type": "function"
                }
              }
            },
            "console": {
              "type": "function"
            },
            "log": {
              "type": "function"
            }
          },
          "summary": "Cross-browser StratifiedJS console"
        },
        "dom-shim": {
          "type": "module",
          "children": {},
          "summary": "DOM polyfills for non-conformant browsers (IE8, IE9)"
        },
        "dom": {
          "type": "module",
          "children": {
            "addCSS": {
              "type": "function"
            },
            "addListener": {
              "type": "function"
            },
            "css": {
              "type": "function"
            },
            "eventTarget": {
              "type": "function"
            },
            "findNode": {
              "type": "function"
            },
            "getCookie": {
              "type": "function"
            },
            "getOffset": {
              "type": "function"
            },
            "isDOMNode": {
              "type": "function"
            },
            "pageX": {
              "type": "function"
            },
            "pageY": {
              "type": "function"
            },
            "preventDefault": {
              "type": "function"
            },
            "removeCookie": {
              "type": "function"
            },
            "removeListener": {
              "type": "function"
            },
            "script": {
              "type": "function"
            },
            "setCookie": {
              "type": "function"
            },
            "stopEvent": {
              "type": "function"
            },
            "stopPropagation": {
              "type": "function"
            },
            "traverseDOM": {
              "type": "function"
            }
          },
          "summary": "Basic DOM functionality"
        },
        "driver": {
          "type": "module",
          "children": {
            "Driver": {
              "type": "class",
              "children": {
                "Driver": {
                  "type": "ctor"
                },
                "__finally__": {
                  "type": "function"
                },
                "assertHidden": {
                  "type": "function"
                },
                "assertShown": {
                  "type": "function"
                },
                "assertVisibility": {
                  "type": "function"
                },
                "body": {
                  "type": "function"
                },
                "click": {
                  "type": "function"
                },
                "close": {
                  "type": "function"
                },
                "computedStyle": {
                  "type": "function"
                },
                "document": {
                  "type": "function"
                },
                "elem": {
                  "type": "function"
                },
                "elems": {
                  "type": "function"
                },
                "enter": {
                  "type": "function"
                },
                "hasClass": {
                  "type": "function"
                },
                "interceptLogging": {
                  "type": "function"
                },
                "isLoaded": {
                  "type": "function"
                },
                "isVisible": {
                  "type": "function"
                },
                "navigate": {
                  "type": "function"
                },
                "reload": {
                  "type": "function"
                },
                "removeLogIntercept": {
                  "type": "function"
                },
                "sendKey": {
                  "type": "function"
                },
                "set": {
                  "type": "function"
                },
                "trigger": {
                  "type": "function"
                },
                "waitUntilLoaded": {
                  "type": "function"
                },
                "waitforCondition": {
                  "type": "function"
                },
                "waitforSuccess": {
                  "type": "function"
                },
                "window": {
                  "type": "function"
                }
              }
            },
            "addTestHooks": {
              "type": "function"
            }
          },
          "summary": "Iframe web driver"
        },
        "html2canvas": {
          "type": "module",
          "children": {
            "render": {
              "type": "function"
            }
          },
          "summary": "Generate virtual screenshots of HTML elements (tracking the [html2canvas library](http://html2canvas.hertzen.com/))"
        }
      },
      "summary": "Basic cross-browser functionality"
    }
  },
  "summary": "Standard collection of modules for the StratifiedJS language",
  "version": "0.20.0-development"
}